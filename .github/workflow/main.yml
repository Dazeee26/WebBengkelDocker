name: Deploy to Railway

on:
  push:
    branches:
      - main # Trigger deployment when changes are pushed to the 'main' branch
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3' # Sesuaikan dengan versi PHP kamu
          extensions: gd, mysqli, pdo_mysql, pdo_pgsql, bcmath, exif, iconv, intl, zip, opcache # Tambahkan ekstensi yang dibutuhkan
          tools: composer

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Setup Node.js (if you have frontend assets)
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Sesuaikan dengan versi Node.js kamu

      - name: Install NPM dependencies and build assets
        run: |
          npm install
          npm run build # Atau 'npm run prod' atau 'yarn build' sesuai package.json kamu

      # Opsional: Jalankan tes Laravel (misalnya PHPUnit)
      - name: Run Laravel Tests
        run: php artisan test

      - name: Install Railway CLI
        run: npm install -g @railwaydev/cli

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} # Dapatkan ini dari Railway CLI atau dashboard
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }} # Dapatkan dari URL Railway project kamu
          RAILWAY_ENVIRONMENT: production # Atau staging, sesuai environment di Railway
        run: |
          # Perintah ini akan memicu Railway untuk mengambil kode terbaru dari GitHub
          # dan menjalankan proses deployment sesuai konfigurasi di Railway (yang akan membaca docker-compose.yml)
          railway up --detach # Gunakan --detach untuk tidak memblokir workflow